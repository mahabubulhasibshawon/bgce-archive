name: Commit Message Lint

on:
    pull_request:

jobs:
    commitlint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  fetch-tags: false

            - name: Check commit messages
              run: |
                  # Fetch commit hashes between origin/master and HEAD
                  commits=$(git log origin/master..HEAD --pretty=format:%H)

                  # Define allowed commit types
                  allowed_types="feat|fix|patch|docs|style|refactor|test|chore"

                  # Regex pattern matching your local commit-msg hook enforcement
                  pattern="^\[([a-zA-Z0-9_-]+)\] \(($allowed_types)\/([a-zA-Z0-9_-]+)\): [A-Z].+"

                  # Loop through each commit to validate message
                  for commit in $commits; do
                    # Get commit message and author
                    commit_msg=$(git log -1 --pretty=format:%s $commit)
                    author=$(git log -1 --pretty=format:'%an' $commit)

                    echo "üîé Checking commit: $commit_msg (by $author)"

                    # Skip merge commits
                    if echo "$commit_msg" | grep -qE "^Merge"; then
                      echo "‚û°Ô∏è Skipping merge commit: $commit_msg"
                      continue
                    fi

                    # Skip bot commits
                    if [[ "$author" == "allcontributors[bot]" ]]; then
                      echo "ü§ñ Skipping All Contributors bot commit: $commit_msg"
                      continue
                    fi

                    # Validate against pattern
                    if ! echo "$commit_msg" | grep -qE "$pattern"; then
                      echo "‚ùå Invalid commit message: $commit_msg"
                      echo "‚úÖ Format: [service] (type/feature-name): Capitalized description"
                      echo "Example: [auth] (feat/jwt-validation): Add JWT validation middleware"
                      exit 1
                    fi
                  done
